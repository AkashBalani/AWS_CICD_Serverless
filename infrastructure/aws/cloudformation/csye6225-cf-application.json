{
   "AWSTemplateFormatVersion":"2010-09-09",
   "Description":"Infrastructure Setup using CloudFormation-Application Stack",
   "Parameters":{
      "AppName":{
         "Type":"String"
      },
      "NetName":{
         "Type":"String"
      },
      "SSHKeyName":{
         "Type":"String"
      },
      "AMI":{
         "Type":"String"
      },
      "BucketName":{
         "Type":"String"
      }
   },
   "Resources":{
      "WebAppSecurityGroup":{
         "Type":"AWS::EC2::SecurityGroup",
         "Properties":{
            "GroupName":{
               "Fn::Sub":"${AppName}-WebAppSecurityGroup"
            },
            "GroupDescription":"Create WebApp Security Group",
            "Tags":[
               {
                  "Key":"Name",
                  "Value":{
                     "Fn::Sub":"${AppName}-WebAppSecurityGroup"
                  }
               }
            ],
            "SecurityGroupIngress":[
               {
                  "IpProtocol":"tcp",
                  "CidrIp":"0.0.0.0/0",
                  "FromPort":22,
                  "ToPort":22
               },
               {
                  "IpProtocol":"tcp",
                  "CidrIp":"0.0.0.0/0",
                  "FromPort":80,
                  "ToPort":80
               },
               {
                  "IpProtocol":"tcp",
                  "CidrIp":"0.0.0.0/0",
                  "FromPort":443,
                  "ToPort":443
               }
            ],
            "VpcId":{
               "Fn::ImportValue":{
                  "Fn::Sub":"${NetName}-VPCID"
               }
            }
         }
      },
      "RDSSecurityGroup":{
         "Type":"AWS::EC2::SecurityGroup",
         "Properties":{
            "GroupName":{
               "Fn::Sub":"${AppName}-RDSSecurityGroup"
            },
            "GroupDescription":"Create RDS SG",
            "Tags":[
               {
                  "Key":"Name",
                  "Value":{
                     "Fn::Sub":"${AppName}-RDSSecurityGroup"
                  }
               }
            ],
            "SecurityGroupIngress":{
               "IpProtocol":"tcp",
               "FromPort":"3306",
               "ToPort":"3306",
               "SourceSecurityGroupId":{
                  "Ref":"WebAppSecurityGroup"
               }
            },
            "VpcId":{
               "Fn::ImportValue":{
                  "Fn::Sub":"${NetName}-VPCID"
               }
            }
         }
      },
      "ec2Instance":{
         "Type":"AWS::EC2::Instance",
         "DependsOn":"DBServer",
         "Properties":{
            "ImageId":{
               "Ref":"AMI"
            },
            "SubnetId":{
               "Fn::ImportValue":{
                  "Fn::Sub":"${NetName}-PublicSubnet1"
               }
            },
            "InstanceType":"t2.micro",
            "Tags":[
               {
                  "Key":"Name",
                  "Value":{
                     "Fn::Sub":"${AppName}-EC2Instance"
                  }
               }
            ],
            "KeyName":{
               "Ref":"SSHKeyName"
            },
            "SecurityGroupIds":[
               {
                  "Ref":"WebAppSecurityGroup"
               }
            ],
            "IamInstanceProfile":{
               "Fn::ImportValue":"EC2InstanceProfile"
            },
            "UserData":{
               "Fn::Base64":{
                  "Fn::Join":[
                     "",
                     [
                        "#!/bin/bash \n",
                        "sudo service codedeploy-agent status \n",
                        "echo export DB_HOST=",
                        {
                           "Fn::GetAtt":[
                              "DBServer",
                              "Endpoint.Address"
                           ]
                        },
                        " >> /etc/profile \n",
                        "echo export DB_PORT=",
                        {
                           "Fn::GetAtt":[
                              "DBServer",
                              "Endpoint.Port"
                           ]
                        },
                        " >> /etc/profile \n",
                        "echo export DB_USERNAME='csye6225master' >> /etc/profile \n",
                        "echo export DB_PASSWORD='csye6225password' >> /etc/profile \n",
                        "echo export S3_BUCKET=",
                        {
                           "Fn::Sub":"csye6225-spring2019-${BucketName}.me.csye6225.com"
                        },
                        " >> /etc/profile \n"
                     ]
                  ]
               }
            }
         }
      },
      "DBServer":{
         "Type":"AWS::RDS::DBInstance",
         "Properties":{
            "AllocatedStorage":"10",
            "DBInstanceIdentifier":"csye6225-spring2019",
            "DBName":"csye6225",
            "DBInstanceClass":"db.t2.medium",
            "MultiAZ":"false",
            "Engine":"MySQL",
            "EngineVersion":"5.6.37",
            "MasterUsername":"csye6225master",
            "MasterUserPassword":"csye6225password",
            "DBSubnetGroupName":{
               "Ref":"DBSubnetGroup"
            },
            "PubliclyAccessible":"true",
            "VPCSecurityGroups":[
               {
                  "Ref":"RDSSecurityGroup"
               }
            ]
         }
      },
      "DBSubnetGroup":{
         "Type":"AWS::RDS::DBSubnetGroup",
         "Properties":{
            "DBSubnetGroupDescription":"Included two Subnet- PublicSubnet2, PublicSubnet3",
            "SubnetIds":[
               {
                  "Fn::ImportValue":{
                     "Fn::Sub":"${NetName}-PublicSubnet2"
                  }
               },
               {
                  "Fn::ImportValue":{
                     "Fn::Sub":"${NetName}-PublicSubnet3"
                  }
               }
            ],
            "Tags":[
               {
                  "Key":"Name",
                  "Value":{
                     "Fn::Sub":"${AppName}-DBSubnetGroup"
                  }
               }
            ]
         }
      },
      "DynamoDBTable":{
         "Type":"AWS::DynamoDB::Table",
         "Properties":{
            "AttributeDefinitions":[
               {
                  "AttributeName":"Id",
                  "AttributeType":"S"
               }
            ],
            "KeySchema":[
               {
                  "AttributeName":"Id",
                  "KeyType":"HASH"
               }
            ],
            "TableName":"csye6225",
            "ProvisionedThroughput":{
               "ReadCapacityUnits":"5",
               "WriteCapacityUnits":"5"
            },
            "Tags":[
               {
                  "Key":"Name",
                  "Value":{
                     "Fn::Sub":"${AppName}-DynamoDBTable"
                  }
               }
            ]
         }
      },
      "CodeDeployApplication":{
         "Type":"AWS::CodeDeploy::Application",
         "Properties":{
            "ApplicationName":"csye6225-webapp",
            "ComputePlatform":"Server"
         }
      },
      "DeploymentGroup":{
         "Type":"AWS::CodeDeploy::DeploymentGroup",
         "Properties":{
            "ApplicationName":{
               "Ref":"CodeDeployApplication"
            },
            "DeploymentGroupName":"csye6225-webapp-deployment",
            "DeploymentStyle":{
               "DeploymentType":"IN_PLACE",
               "DeploymentOption":"WITHOUT_TRAFFIC_CONTROL"
            },
            "DeploymentConfigName":"CodeDeployDefault.AllAtOnce",
            "Ec2TagFilters":[
               {
                  "Key":"Name",
                  "Value":{"Fn::Sub":"${AppName}-EC2Instance"},
                  "Type":"KEY_AND_VALUE"
               }
            ],
            "AutoRollbackConfiguration":{
               "Enabled":"true",
               "Events":[
                  "DEPLOYMENT_FAILURE"
               ]
            },
            "ServiceRoleArn":{
               "Fn::ImportValue":"CodeDeployServiceRole"
            }
         }
      }
   }
}